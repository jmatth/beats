// +build !integration

package s3out

import (
	"github.com/aws/aws-sdk-go/service/s3"
	"github.com/stretchr/testify/mock"
)

// MockS3API is an autogenerated mock type for the S3API type
type s3Mock struct {
	mock.Mock
}

// PutObject provides a mock function with given fields: _a0
func (_m *s3Mock) PutObject(_a0 *s3.PutObjectInput) (*s3.PutObjectOutput, error) {
	ret := _m.Called(_a0)

	var r0 *s3.PutObjectOutput
	if rf, ok := ret.Get(0).(func(*s3.PutObjectInput) *s3.PutObjectOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*s3.PutObjectOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*s3.PutObjectInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// consumerMock is an autogenerated mock type for the consumerAPI type
type consumerMock struct {
	mock.Mock
}

// appendLine provides a mock function with given fields: _a0
func (_m *consumerMock) appendLine(_a0 string) {
	_m.Called(_a0)
}

// run provides a mock function with given fields:
func (_m *consumerMock) run() {
	_m.Called()
}

// shutdown provides a mock function with given fields:
func (_m *consumerMock) shutdown() {
	_m.Called()
}
